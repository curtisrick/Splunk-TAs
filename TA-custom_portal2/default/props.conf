
# Initial timestamp configuration and JSON search-time extraction

[custom2:k8s]
KV_MODE = json
MAX_TIMESTAMP_LOOKAHEAD = 24
SHOULD_LINEMERGE = 0
TIME_FORMAT = %FT%T.%3QZ
TIME_PREFIX = .*.timestamp\"\:\"
TZ = UTC
pulldown_type = 1

# Keep auth logs, but discard the rest

TRANSFORMS-0set = setnull, setparsing

# Sourcetyping

TRANSFORMS-sourcetype = auth, nginx

# Index routing

TRANSFORMS-index = Prod

# Field extraction within the message field for auth authentication

[custom2:auth]

EXTRACT-captcha_validation = \"message\"\:\"[\S]+\s(?<log_level>[\S]+)\s+\[(?<log_type>[\S]+)\]\s+\([a-zA-Z]+\s[a-zA-Z]+-(?<default_task>[0-9]+)\)\s+User\s+(?<username>[a-zA-Z0-9\-\_\@\.\+\\]+)\:\s+(?<error>[a-zA-Z\s\'-_]+)\"
EXTRACT-header = \"message\"\:\"[\S]+\s(?<log_level>[\S]+)\s+\[(?<log_type>[\S]+)\]\s+\([a-zA-Z]+\s[a-zA-Z]+-(?<default_task>[0-9]+)\)\s+(?<event_type>[a-zA-Z0-9\-\_]+)\:
EXTRACT-header2 = \"message\"\:\"[\S]+\s(?<log_level>[\S]+)\s+\[(?<log_type>[\S]+)\]\s+\([a-zA-Z]+\s[a-zA-Z]+-(?<default_task>[0-9]+)\)

REPORT-cefExtract = keyValueExtract

# CIM fields

FIELDALIAS-username = username AS user, username AS src_user
FIELDALIAS-ipAddress = ipAddress AS src, ipAddress AS src_ip
FIELDALIAS-signature = error AS signature
FIELDALIAS-category = type AS category

EXTRACT-dest = redirect_uri=[a-z]{4,5}\:\/\/(?<dest>[a-zA-Z0-9\._-]+)

EVAL-action = case(category="LOGIN_ERROR", "failure", category="Brute Force Protector" AND signature="login failure", "failure", category="UPDATE_PASSWORD_ERROR", "failure", category="EXECUTE_ACTIONS_ERROR", "failure", category="RESET_PASSWORD_ERROR", "failure", match(signature, "LoginFailureKey"), "failure", match(signature, "Login failed"), "failure", category="LOGIN", "success", signature="reCAPTCHA validation passed", "success", match(signature, "Bypassing reCAPTCHA"), "success")
EVAL-category = case(isnotnull(category), category, log_type="authentication.forms.recaptcha.UsernamePasswordRecapForm", "RECAPTCHA_FORM", log_type="org.auth.models.sessions.infinispan.changes.InfinispanChangelogBasedTransaction", "KEY_CACHE_ITEM")
EVAL-app = case(isnotnull(clientId), clientId)
EVAL-logstash_tag = case(match(tags, "Prod"), "Prod", match(tags, "Test0"), "Test0")
EVAL-username = replace(username, "(^[a-zA-Z0-9\-\_\@\.]+)(.*)", "\1")
EVAL-src_user = replace(user, "(^[a-zA-Z0-9\-\_\@\.]+)(.*)", "\1")
EVAL-user = replace(user, "(^[a-zA-Z0-9\-\_\@\.]+)(.*)", "\1")
EVAL-signature = case(isnotnull(signature), signature, category="LOGIN", "successful_login")
EVAL-dest = if(isnotnull(dest), dest, "Custom Portal 2")